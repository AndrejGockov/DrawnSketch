{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Programming\\\\End of The Year Project\\\\SketchNDraw\\\\src\\\\pages\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Backwards from \"./sections/Backwards.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Canvas = () => {\n  _s();\n  // const [mouseData, setMouseData] = useState({ x: 0, y: 0 });\n  const canvasRef = useRef(null);\n  const [canvasCTX, setCanvasCTX] = useState(null);\n  const [color, setColor] = useState(\"#000000\");\n  const [brushSize, setBrushSize] = useState(10);\n  const [eraserSize, setEraserSize] = useState(10);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    setCanvasCTX(ctx);\n    let drawing = false;\n\n    //Canvas Size\n    canvas.width = 800;\n    canvas.height = 400;\n  }, [canvasRef]);\n  const StartDrawing = e => {\n    drawing = true;\n    if (penSelected) {\n      //Pen\n      ctx.beginPath();\n      ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n      ctx.strokeStyle = \"blue\";\n      ctx.lineWidth = brushSize;\n    } else if (eraserSelected) {\n      //Eraser\n      ctx.beginPath();\n      ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n      ctx.strokeStyle = \"white\";\n      ctx.lineWidth = eraserSize;\n    }\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.stroke();\n    e.preventDefault();\n  };\n  const Draw = e => {\n    if (e.buttons !== 1) return;\n    const ctx = canvasCTX;\n    ctx.beginPath();\n    ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n    ctx.lineTo(e.clientX, e.clientY);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = brushSize;\n    // Set the line cap to round\n    ctx.lineCap = \"round\";\n    ctx.stroke();\n  };\n\n  // ctx.lineCap = \"round\";\n  // let drawing = false;\n\n  // ctx.fillStyle = \"white\";\n  // ctx.fillRect(0, 0, canvas.width, canvas.height);\n  // ctx.save();\n  // ctx.mozImageSmoothingEnabled = false;\n  // ctx.imageSmoothingEnabled = false;\n\n  // const pen = document.querySelector(\"#pen\");\n  // let penSelected = true;\n  // const eraser = document.querySelector(\"#eraser\");\n  // let eraserSelected = false;\n\n  // pen.addEventListener(\"click\", () => {\n  //   penSelected = true;\n  //   eraserSelected = false;\n  //   document.querySelector(\".brush-size\").style.visibility = \"visible\";\n  //   document.querySelector(\".eraser-size\").style.visibility = \"hidden\";\n  //   console.log(\"pen:\" + penSelected);\n  //   console.log(\"eraser :\" + eraserSelected);\n  // });\n\n  // eraser.addEventListener(\"click\", () => {\n  //   eraserSelected = true;\n  //   penSelected = false;\n  //   document.querySelector(\".brush-size\").style.visibility = \"hidden\";\n  //   document.querySelector(\".eraser-size\").style.visibility = \"visible\";\n  //   console.log(\"pen:\" + penSelected);\n  //   console.log(\"eraser:\" + eraserSelected);\n  // });\n\n  // //PC\n  // canvas.addEventListener(\"mousedown\", StartDrawing, false);\n  // canvas.addEventListener(\"mousemove\", Drawing, false);\n  // canvas.addEventListener(\"mouseup\", StopDrawing, false);\n  // canvas.addEventListener(\"mouseout\", StopDrawing, false);\n  // //Mobile\n  // canvas.addEventListener(\"touchstart\", StartDrawing, false);\n  // canvas.addEventListener(\n  //   \"touchmove\",\n  //   function (e) {\n  //     var touch = e.touches[0];\n  //     let mouseEvent = new MouseEvent(\"mousemove\", {\n  //       clientX: touch.clientX,\n  //       clientY: touch.clientY,\n  //     });\n  //     canvas.dispatchEvent(mouseEvent);\n  //     // Drawing();\n  //   },\n  //   false\n  // );\n  // canvas.addEventListener(\"touchend\", StopDrawing, false);\n\n  // const StartDrawing = (e) => {\n  //   drawing = true;\n  //   if (penSelected) {\n  //     //Pen\n  //     ctx.beginPath();\n  //     ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n  //     ctx.strokeStyle = currentColor;\n  //     ctx.lineWidth = currentBrushSize;\n  //   } else if (eraserSelected) {\n  //     //Eraser\n  //     ctx.beginPath();\n  //     ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n  //     ctx.strokeStyle = \"white\";\n  //     ctx.lineWidth = currentEraserSize;\n  //   }\n  //   ctx.lineCap = \"round\";\n  //   ctx.lineJoin = \"round\";\n  //   ctx.stroke();\n  //   e.preventDefault();\n  // };\n\n  // const Drawing = (e) => {\n  //   if (drawing) {\n  //     if (penSelected) {\n  //       ctx.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n  //       ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n  //       ctx.strokeStyle = currentColor;\n  //       ctx.lineWidth = currentBrushSize;\n  //     } else if (eraserSelected) {\n  //       ctx.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n  //       ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n  //       ctx.strokeStyle = \"white\";\n  //       ctx.lineWidth = currentEraserSize;\n  //     }\n  //     ctx.lineCap = \"round\";\n  //     ctx.lineJoin = \"round\";\n  //     ctx.stroke();\n  //     e.preventDefault();\n  //   }\n  // };\n\n  // const StopDrawing = (e) => {\n  //   if (drawing) {\n  //     drawing = false;\n\n  //     ctx.stroke();\n  //     ctx.closePath(); //ends the path/drawing\n  //   }\n  //   e.preventDefault();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tool-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"checkbox\",\n        type: \"checkbox\",\n        name: \"\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"menu\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M4 6h16v2H4zm0 5h16v2H4zm0 5h16v2H4z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tools\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            id: \"pen\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M7.061 22c1.523 0 2.84-.543 3.91-1.613 1.123-1.123 1.707-2.854 1.551-4.494l8.564-8.564a3.123 3.123 0 0 0-.002-4.414c-1.178-1.18-3.234-1.18-4.412 0l-8.884 8.884c-1.913.169-3.807 1.521-3.807 3.919 0 .303.021.588.042.86.08 1.031.109 1.418-1.471 2.208a1.001 1.001 0 0 0-.122 1.717C2.52 20.563 4.623 22 7.061 22c-.001 0-.001 0 0 0zM18.086 4.328a1.144 1.144 0 0 1 1.586.002 1.12 1.12 0 0 1 0 1.584L12 13.586 10.414 12l7.672-7.672zM6.018 16.423c-.018-.224-.037-.458-.037-.706 0-1.545 1.445-1.953 2.21-1.953.356 0 .699.073.964.206.945.475 1.26 1.293 1.357 1.896.177 1.09-.217 2.368-.956 3.107C8.865 19.664 8.049 20 7.061 20H7.06c-.75 0-1.479-.196-2.074-.427 1.082-.973 1.121-1.989 1.032-3.15z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brush-size\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"100\",\n              value: brushSize,\n              onChange: e => {\n                setBrushSize(e.target.value);\n              },\n              id: \"pen-size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            id: \"eraser\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12.48 3 7.73 7.75 3 12.59a2 2 0 0 0 0 2.82l4.3 4.3A1 1 0 0 0 8 20h12v-2h-7l7.22-7.22a2 2 0 0 0 0-2.83L15.31 3a2 2 0 0 0-2.83 0zM8.41 18l-4-4 4.75-4.84.74-.75 4.95 4.95-4.56 4.56-.07.08z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"eraser-size\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"100\",\n              value: eraserSize,\n              onChange: e => {\n                setEraserSize(e.target.value);\n              },\n              id: \"eraser-size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            id: \"color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            className: \"download\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"m12 16 4-5h-3V4h-2v7H8z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            className: \"clear-canvas\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M19.937 8.68c-.011-.032-.02-.063-.033-.094a.997.997 0 0 0-.196-.293l-6-6a.997.997 0 0 0-.293-.196c-.03-.014-.062-.022-.094-.033a.991.991 0 0 0-.259-.051C13.04 2.011 13.021 2 13 2H6c-1.103 0-2 .897-2 2v16c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2V9c0-.021-.011-.04-.013-.062a.99.99 0 0 0-.05-.258zM16.586 8H14V5.414L16.586 8zM6 20V4h6v5a1 1 0 0 0 1 1h5l.002 10H6z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backwards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      ref: canvasRef,\n      onMouseEnter: e => SetPos(e),\n      onMouseMove: e => SetPos(e),\n      onMouseDown: e => StartDrawing(e),\n      onMouseMove: e => Draw(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"jhlm4QrTSTq/vsUvTyU93DXaivs=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Backwards","Canvas","canvasRef","canvasCTX","setCanvasCTX","color","setColor","brushSize","setBrushSize","eraserSize","setEraserSize","canvas","current","ctx","getContext","drawing","width","height","StartDrawing","e","penSelected","beginPath","moveTo","clientX","offsetLeft","clientY","offsetTop","strokeStyle","lineWidth","eraserSelected","lineCap","lineJoin","stroke","preventDefault","Draw","buttons","lineTo","target","value","SetPos"],"sources":["C:/Users/Admin/Documents/Programming/End of The Year Project/SketchNDraw/src/pages/Canvas.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Backwards from \"./sections/Backwards.js\";\r\n\r\nexport const Canvas = () => {\r\n  // const [mouseData, setMouseData] = useState({ x: 0, y: 0 });\r\n  const canvasRef = useRef(null);\r\n  const [canvasCTX, setCanvasCTX] = useState(null);\r\n  const [color, setColor] = useState(\"#000000\");\r\n  const [brushSize, setBrushSize] = useState(10);\r\n  const [eraserSize, setEraserSize] = useState(10);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    setCanvasCTX(ctx);\r\n    let drawing = false;\r\n\r\n    //Canvas Size\r\n    canvas.width = 800;\r\n    canvas.height = 400;\r\n  }, [canvasRef]);\r\n\r\n  const StartDrawing = (e) => {\r\n    drawing = true;\r\n    if (penSelected) {\r\n      //Pen\r\n      ctx.beginPath();\r\n      ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n      ctx.strokeStyle = \"blue\";\r\n      ctx.lineWidth = brushSize;\r\n    } else if (eraserSelected) {\r\n      //Eraser\r\n      ctx.beginPath();\r\n      ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n      ctx.strokeStyle = \"white\";\r\n      ctx.lineWidth = eraserSize;\r\n    }\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.stroke();\r\n    e.preventDefault();\r\n  };\r\n\r\n  const Draw = (e) => {\r\n    if (e.buttons !== 1) return;\r\n    const ctx = canvasCTX;\r\n    ctx.beginPath();\r\n    ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n    ctx.lineTo(e.clientX, e.clientY);\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = brushSize;\r\n    // Set the line cap to round\r\n    ctx.lineCap = \"round\";\r\n    ctx.stroke();\r\n  };\r\n\r\n  // ctx.lineCap = \"round\";\r\n  // let drawing = false;\r\n\r\n  // ctx.fillStyle = \"white\";\r\n  // ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  // ctx.save();\r\n  // ctx.mozImageSmoothingEnabled = false;\r\n  // ctx.imageSmoothingEnabled = false;\r\n\r\n  // const pen = document.querySelector(\"#pen\");\r\n  // let penSelected = true;\r\n  // const eraser = document.querySelector(\"#eraser\");\r\n  // let eraserSelected = false;\r\n\r\n  // pen.addEventListener(\"click\", () => {\r\n  //   penSelected = true;\r\n  //   eraserSelected = false;\r\n  //   document.querySelector(\".brush-size\").style.visibility = \"visible\";\r\n  //   document.querySelector(\".eraser-size\").style.visibility = \"hidden\";\r\n  //   console.log(\"pen:\" + penSelected);\r\n  //   console.log(\"eraser :\" + eraserSelected);\r\n  // });\r\n\r\n  // eraser.addEventListener(\"click\", () => {\r\n  //   eraserSelected = true;\r\n  //   penSelected = false;\r\n  //   document.querySelector(\".brush-size\").style.visibility = \"hidden\";\r\n  //   document.querySelector(\".eraser-size\").style.visibility = \"visible\";\r\n  //   console.log(\"pen:\" + penSelected);\r\n  //   console.log(\"eraser:\" + eraserSelected);\r\n  // });\r\n\r\n  // //PC\r\n  // canvas.addEventListener(\"mousedown\", StartDrawing, false);\r\n  // canvas.addEventListener(\"mousemove\", Drawing, false);\r\n  // canvas.addEventListener(\"mouseup\", StopDrawing, false);\r\n  // canvas.addEventListener(\"mouseout\", StopDrawing, false);\r\n  // //Mobile\r\n  // canvas.addEventListener(\"touchstart\", StartDrawing, false);\r\n  // canvas.addEventListener(\r\n  //   \"touchmove\",\r\n  //   function (e) {\r\n  //     var touch = e.touches[0];\r\n  //     let mouseEvent = new MouseEvent(\"mousemove\", {\r\n  //       clientX: touch.clientX,\r\n  //       clientY: touch.clientY,\r\n  //     });\r\n  //     canvas.dispatchEvent(mouseEvent);\r\n  //     // Drawing();\r\n  //   },\r\n  //   false\r\n  // );\r\n  // canvas.addEventListener(\"touchend\", StopDrawing, false);\r\n\r\n  // const StartDrawing = (e) => {\r\n  //   drawing = true;\r\n  //   if (penSelected) {\r\n  //     //Pen\r\n  //     ctx.beginPath();\r\n  //     ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n  //     ctx.strokeStyle = currentColor;\r\n  //     ctx.lineWidth = currentBrushSize;\r\n  //   } else if (eraserSelected) {\r\n  //     //Eraser\r\n  //     ctx.beginPath();\r\n  //     ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n  //     ctx.strokeStyle = \"white\";\r\n  //     ctx.lineWidth = currentEraserSize;\r\n  //   }\r\n  //   ctx.lineCap = \"round\";\r\n  //   ctx.lineJoin = \"round\";\r\n  //   ctx.stroke();\r\n  //   e.preventDefault();\r\n  // };\r\n\r\n  // const Drawing = (e) => {\r\n  //   if (drawing) {\r\n  //     if (penSelected) {\r\n  //       ctx.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n  //       ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n  //       ctx.strokeStyle = currentColor;\r\n  //       ctx.lineWidth = currentBrushSize;\r\n  //     } else if (eraserSelected) {\r\n  //       ctx.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n  //       ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n  //       ctx.strokeStyle = \"white\";\r\n  //       ctx.lineWidth = currentEraserSize;\r\n  //     }\r\n  //     ctx.lineCap = \"round\";\r\n  //     ctx.lineJoin = \"round\";\r\n  //     ctx.stroke();\r\n  //     e.preventDefault();\r\n  //   }\r\n  // };\r\n\r\n  // const StopDrawing = (e) => {\r\n  //   if (drawing) {\r\n  //     drawing = false;\r\n\r\n  //     ctx.stroke();\r\n  //     ctx.closePath(); //ends the path/drawing\r\n  //   }\r\n  //   e.preventDefault();\r\n  // };\r\n\r\n  return (\r\n    <div className=\"canvas-background\">\r\n      <div className=\"tool-menu\">\r\n        <input className=\"checkbox\" type=\"checkbox\" name=\"\" id=\"\" />\r\n\r\n        <svg className=\"menu\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M4 6h16v2H4zm0 5h16v2H4zm0 5h16v2H4z\"></path>\r\n        </svg>\r\n\r\n        <div className=\"tools\">\r\n          <div className=\"tool\">\r\n            <svg viewBox=\"0 0 24 24\" id=\"pen\">\r\n              <path d=\"M7.061 22c1.523 0 2.84-.543 3.91-1.613 1.123-1.123 1.707-2.854 1.551-4.494l8.564-8.564a3.123 3.123 0 0 0-.002-4.414c-1.178-1.18-3.234-1.18-4.412 0l-8.884 8.884c-1.913.169-3.807 1.521-3.807 3.919 0 .303.021.588.042.86.08 1.031.109 1.418-1.471 2.208a1.001 1.001 0 0 0-.122 1.717C2.52 20.563 4.623 22 7.061 22c-.001 0-.001 0 0 0zM18.086 4.328a1.144 1.144 0 0 1 1.586.002 1.12 1.12 0 0 1 0 1.584L12 13.586 10.414 12l7.672-7.672zM6.018 16.423c-.018-.224-.037-.458-.037-.706 0-1.545 1.445-1.953 2.21-1.953.356 0 .699.073.964.206.945.475 1.26 1.293 1.357 1.896.177 1.09-.217 2.368-.956 3.107C8.865 19.664 8.049 20 7.061 20H7.06c-.75 0-1.479-.196-2.074-.427 1.082-.973 1.121-1.989 1.032-3.15z\"></path>\r\n            </svg>\r\n\r\n            <div className=\"brush-size\">\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                value={brushSize}\r\n                onChange={(e) => {\r\n                  setBrushSize(e.target.value);\r\n                }}\r\n                id=\"pen-size\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"tool\">\r\n            <svg viewBox=\"0 0 24 24\" id=\"eraser\">\r\n              <path d=\"M12.48 3 7.73 7.75 3 12.59a2 2 0 0 0 0 2.82l4.3 4.3A1 1 0 0 0 8 20h12v-2h-7l7.22-7.22a2 2 0 0 0 0-2.83L15.31 3a2 2 0 0 0-2.83 0zM8.41 18l-4-4 4.75-4.84.74-.75 4.95 4.95-4.56 4.56-.07.08z\"></path>\r\n            </svg>\r\n\r\n            <div className=\"eraser-size\">\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                value={eraserSize}\r\n                onChange={(e) => {\r\n                  setEraserSize(e.target.value);\r\n                }}\r\n                id=\"eraser-size\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"tool\">\r\n            <input type=\"color\" id=\"color\" />\r\n          </div>\r\n          <div className=\"tool\">\r\n            <svg viewBox=\"0 0 24 24\" className=\"download\">\r\n              <path d=\"m12 16 4-5h-3V4h-2v7H8z\"></path>\r\n              <path d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\"></path>\r\n            </svg>\r\n          </div>\r\n          <div className=\"tool\">\r\n            <svg viewBox=\"0 0 24 24\" className=\"clear-canvas\">\r\n              <path d=\"M19.937 8.68c-.011-.032-.02-.063-.033-.094a.997.997 0 0 0-.196-.293l-6-6a.997.997 0 0 0-.293-.196c-.03-.014-.062-.022-.094-.033a.991.991 0 0 0-.259-.051C13.04 2.011 13.021 2 13 2H6c-1.103 0-2 .897-2 2v16c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2V9c0-.021-.011-.04-.013-.062a.99.99 0 0 0-.05-.258zM16.586 8H14V5.414L16.586 8zM6 20V4h6v5a1 1 0 0 0 1 1h5l.002 10H6z\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Backwards />\r\n\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        onMouseEnter={(e) => SetPos(e)}\r\n        onMouseMove={(e) => SetPos(e)}\r\n        onMouseDown={(e) => StartDrawing(e)}\r\n        onMouseMove={(e) => Draw(e)}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,OAAO,MAAMC,MAAM,GAAG,MAAM;EAAA;EAC1B;EACA,MAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,SAAS,CAAC;EAC7C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhDF,SAAS,CAAC,MAAM;IACd,MAAMc,MAAM,GAAGT,SAAS,CAACU,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCV,YAAY,CAACS,GAAG,CAAC;IACjB,IAAIE,OAAO,GAAG,KAAK;;IAEnB;IACAJ,MAAM,CAACK,KAAK,GAAG,GAAG;IAClBL,MAAM,CAACM,MAAM,GAAG,GAAG;EACrB,CAAC,EAAE,CAACf,SAAS,CAAC,CAAC;EAEf,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IAC1BJ,OAAO,GAAG,IAAI;IACd,IAAIK,WAAW,EAAE;MACf;MACAP,GAAG,CAACQ,SAAS,EAAE;MACfR,GAAG,CAACS,MAAM,CAACH,CAAC,CAACI,OAAO,GAAGZ,MAAM,CAACa,UAAU,EAAEL,CAAC,CAACM,OAAO,GAAGd,MAAM,CAACe,SAAS,CAAC;MACvEb,GAAG,CAACc,WAAW,GAAG,MAAM;MACxBd,GAAG,CAACe,SAAS,GAAGrB,SAAS;IAC3B,CAAC,MAAM,IAAIsB,cAAc,EAAE;MACzB;MACAhB,GAAG,CAACQ,SAAS,EAAE;MACfR,GAAG,CAACS,MAAM,CAACH,CAAC,CAACI,OAAO,GAAGZ,MAAM,CAACa,UAAU,EAAEL,CAAC,CAACM,OAAO,GAAGd,MAAM,CAACe,SAAS,CAAC;MACvEb,GAAG,CAACc,WAAW,GAAG,OAAO;MACzBd,GAAG,CAACe,SAAS,GAAGnB,UAAU;IAC5B;IACAI,GAAG,CAACiB,OAAO,GAAG,OAAO;IACrBjB,GAAG,CAACkB,QAAQ,GAAG,OAAO;IACtBlB,GAAG,CAACmB,MAAM,EAAE;IACZb,CAAC,CAACc,cAAc,EAAE;EACpB,CAAC;EAED,MAAMC,IAAI,GAAIf,CAAC,IAAK;IAClB,IAAIA,CAAC,CAACgB,OAAO,KAAK,CAAC,EAAE;IACrB,MAAMtB,GAAG,GAAGV,SAAS;IACrBU,GAAG,CAACQ,SAAS,EAAE;IACfR,GAAG,CAACS,MAAM,CAACH,CAAC,CAACI,OAAO,GAAGZ,MAAM,CAACa,UAAU,EAAEL,CAAC,CAACM,OAAO,GAAGd,MAAM,CAACe,SAAS,CAAC;IACvEb,GAAG,CAACuB,MAAM,CAACjB,CAAC,CAACI,OAAO,EAAEJ,CAAC,CAACM,OAAO,CAAC;IAChCZ,GAAG,CAACc,WAAW,GAAGtB,KAAK;IACvBQ,GAAG,CAACe,SAAS,GAAGrB,SAAS;IACzB;IACAM,GAAG,CAACiB,OAAO,GAAG,OAAO;IACrBjB,GAAG,CAACmB,MAAM,EAAE;EACd,CAAC;;EAED;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAChC;M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"},"metadata":{},"sourceType":"module","externalDependencies":[]}