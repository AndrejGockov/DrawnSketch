{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Programming\\\\End of The Year Project\\\\SketchNDraw\\\\src\\\\pages\\\\Paint.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Backwards from \"./sections/Backwards.js\";\nimport Tools from \"./sections/Tools.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Paint = () => {\n  _s();\n  //Canvas and Context References\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight]);\n\n  // windowSize.addEventListener(\"resize\", canvasSize);\n\n  // window.onload = window.onresize = function () {\n  //   if (windowSize.innerWidth <= 800) {\n  //     canvasRef.width = window.innerWidth * 0.8;\n  //     console.log(window.width);\n  //   } else {\n  //     canvasRef.width = 800;\n  //   }\n  // };\n\n  useEffect(() => {\n    //Canvas\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 400;\n\n    //Context\n    const ctx = canvas.getContext(\"2d\");\n    ctx.mozImageSmoothingEnabled = false;\n    ctx.imageSmoothingEnabled = false;\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.lineCap = \"round\";\n    ctx.lineWidth = 5;\n    contextRef.current = ctx;\n    function handleWindowResize() {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n      console.log(setWindowSize);\n      if (windowSize.innerWidth <= 800) {\n        canvas.width = window.innerWidth * 0.8;\n        console.log(window.width);\n      } else {\n        canvas.width = 800;\n      }\n    }\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => {};\n  }, []);\n  const startDrawing = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    setIsDrawing(true);\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    // console.log(offsetX + \" \" + offsetY);\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    // nativeEvent.preventDefault();\n  };\n\n  const Drawing = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    if (!isDrawing) {\n      return;\n    } else {\n      // console.log(offsetX + \" \" + offsetY);\n\n      if (nativeEvent.type == \"touchmove\") {\n        const {\n          offsetX,\n          offsetY\n        } = nativeEvent.touches[0];\n        console.log(offsetX + \" \" + offsetY);\n        contextRef.current.lineTo(nativeEvent.touches[0].clientX, nativeEvent.touches[0].clientY);\n      } else {\n        const {\n          offsetX,\n          offsetY\n        } = nativeEvent;\n        contextRef.current.lineTo(offsetX, offsetY);\n      }\n      contextRef.current.stroke();\n      // nativeEvent.preventDefault();\n    }\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n    contextRef.current.closePath();\n  };\n  const setToDraw = () => {\n    contextRef.current.globalCompositeOperation = \"source-over\";\n  };\n  const setToErase = () => {\n    contextRef.current.globalCompositeOperation = \"destination-out\";\n  };\n  function colorChange(e) {\n    contextRef.current.strokeStyle = e.target.value;\n  }\n  const downloadDrawing = event => {\n    //Selects the target of the event the current state of the Canvas.\n    //Then downloads it as an image and names it \"Sketch.png\"\n    let link = event.currentTarget;\n    let image = canvasRef.current.toDataURL(\"image/png\");\n    link.setAttribute(\"download\", \"SketchNDraw.png\");\n    link.setAttribute(\"href\", image);\n  };\n  function clearCanvas(e) {\n    contextRef.current.fillStyle = \"white\";\n    contextRef.current.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tools, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backwards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      onMouseDown: startDrawing,\n      onMouseMove: Drawing,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing,\n      onTouchStart: startDrawing,\n      onTouchMove: Drawing,\n      onTouchEnd: stopDrawing,\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: downloadDrawing,\n      children: \"Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"color\",\n      id: \"color\",\n      onChange: colorChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearCanvas,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setToDraw,\n      children: \"Pen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setToErase,\n      children: \"Erase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Paint, \"mPKbs752sDC5cVv/KBXkT6GGMII=\");\n_c = Paint;\nexport default Paint;\nvar _c;\n$RefreshReg$(_c, \"Paint\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Backwards","Tools","Paint","canvasRef","contextRef","isDrawing","setIsDrawing","windowSize","setWindowSize","window","innerWidth","innerHeight","canvas","current","width","height","ctx","getContext","mozImageSmoothingEnabled","imageSmoothingEnabled","fillStyle","fillRect","lineCap","lineWidth","handleWindowResize","console","log","addEventListener","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","stroke","Drawing","type","touches","lineTo","clientX","clientY","stopDrawing","closePath","setToDraw","globalCompositeOperation","setToErase","colorChange","e","strokeStyle","target","value","downloadDrawing","event","link","currentTarget","image","toDataURL","setAttribute","clearCanvas"],"sources":["C:/Users/Admin/Documents/Programming/End of The Year Project/SketchNDraw/src/pages/Paint.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Backwards from \"./sections/Backwards.js\";\r\nimport Tools from \"./sections/Tools.js\";\r\n\r\nexport const Paint = () => {\r\n  //Canvas and Context References\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n\r\n  const [windowSize, setWindowSize] = useState([\r\n    window.innerWidth,\r\n    window.innerHeight,\r\n  ]);\r\n\r\n  // windowSize.addEventListener(\"resize\", canvasSize);\r\n\r\n  // window.onload = window.onresize = function () {\r\n  //   if (windowSize.innerWidth <= 800) {\r\n  //     canvasRef.width = window.innerWidth * 0.8;\r\n  //     console.log(window.width);\r\n  //   } else {\r\n  //     canvasRef.width = 800;\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    //Canvas\r\n    const canvas = canvasRef.current;\r\n    canvas.width = 800;\r\n    canvas.height = 400;\r\n\r\n    //Context\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.mozImageSmoothingEnabled = false;\r\n    ctx.imageSmoothingEnabled = false;\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineCap = \"round\";\r\n\r\n    ctx.lineWidth = 5;\r\n    contextRef.current = ctx;\r\n\r\n    function handleWindowResize() {\r\n      setWindowSize([window.innerWidth, window.innerHeight]);\r\n\r\n      console.log(setWindowSize);\r\n      if (windowSize.innerWidth <= 800) {\r\n        canvas.width = window.innerWidth * 0.8;\r\n        console.log(window.width);\r\n      } else {\r\n        canvas.width = 800;\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n    return () => {};\r\n  }, []);\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    setIsDrawing(true);\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    // console.log(offsetX + \" \" + offsetY);\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n    // nativeEvent.preventDefault();\r\n  };\r\n\r\n  const Drawing = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    } else {\r\n      // console.log(offsetX + \" \" + offsetY);\r\n\r\n      if (nativeEvent.type == \"touchmove\") {\r\n        const { offsetX, offsetY } = nativeEvent.touches[0];\r\n        console.log(offsetX + \" \" + offsetY);\r\n        contextRef.current.lineTo(\r\n          nativeEvent.touches[0].clientX,\r\n          nativeEvent.touches[0].clientY\r\n        );\r\n      } else {\r\n        const { offsetX, offsetY } = nativeEvent;\r\n\r\n        contextRef.current.lineTo(offsetX, offsetY);\r\n      }\r\n      contextRef.current.stroke();\r\n      // nativeEvent.preventDefault();\r\n    }\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    setIsDrawing(false);\r\n    contextRef.current.closePath();\r\n  };\r\n\r\n  const setToDraw = () => {\r\n    contextRef.current.globalCompositeOperation = \"source-over\";\r\n  };\r\n\r\n  const setToErase = () => {\r\n    contextRef.current.globalCompositeOperation = \"destination-out\";\r\n  };\r\n\r\n  function colorChange(e) {\r\n    contextRef.current.strokeStyle = e.target.value;\r\n  }\r\n\r\n  const downloadDrawing = (event) => {\r\n    //Selects the target of the event the current state of the Canvas.\r\n    //Then downloads it as an image and names it \"Sketch.png\"\r\n    let link = event.currentTarget;\r\n    let image = canvasRef.current.toDataURL(\"image/png\");\r\n    link.setAttribute(\"download\", \"SketchNDraw.png\");\r\n    link.setAttribute(\"href\", image);\r\n  };\r\n\r\n  function clearCanvas(e) {\r\n    contextRef.current.fillStyle = \"white\";\r\n    contextRef.current.fillRect(\r\n      0,\r\n      0,\r\n      canvasRef.current.width,\r\n      canvasRef.current.height\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Tools />\r\n      <Backwards />\r\n\r\n      <canvas\r\n        id=\"canvas\"\r\n        onMouseDown={startDrawing}\r\n        onMouseMove={Drawing}\r\n        onMouseUp={stopDrawing}\r\n        onMouseLeave={stopDrawing}\r\n        onTouchStart={startDrawing}\r\n        onTouchMove={Drawing}\r\n        onTouchEnd={stopDrawing}\r\n        ref={canvasRef}\r\n      />\r\n\r\n      <a onClick={downloadDrawing}>Download</a>\r\n      <input type=\"color\" id=\"color\" onChange={colorChange} />\r\n\r\n      <button onClick={clearCanvas}>Clear</button>\r\n      <button onClick={setToDraw}>Pen</button>\r\n      <button onClick={setToErase}>Erase</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Paint;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}