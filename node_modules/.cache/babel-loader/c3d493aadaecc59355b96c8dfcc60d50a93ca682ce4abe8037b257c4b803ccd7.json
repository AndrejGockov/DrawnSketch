{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Programming\\\\End of The Year Project\\\\SketchNDraw\\\\src\\\\pages\\\\Paint.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\n\n// import { Paint } from \"./Paint\";\nimport Backwards from \"./sections/Backwards.js\";\nimport Tools from \"./sections/Tools.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Paint = () => {\n  _s();\n  //Canvas and Context References\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState(\"\");\n  useEffect(() => {\n    //Canvas\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 400;\n\n    //Context\n    const ctx = canvas.getContext(\"2d\");\n    ctx.mozImageSmoothingEnabled = false;\n    ctx.imageSmoothingEnabled = false;\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.lineCap = \"round\";\n    ctx.lineWidth = 5;\n    contextRef.current = ctx;\n  }, []);\n  const startDrawing = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    setIsDrawing(true);\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    // console.log(offsetX + \" \" + offsetY);\n\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    contextRef.strokeStyle = color.current;\n    // nativeEvent.preventDefault();\n  };\n\n  const Drawing = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    if (!isDrawing) {\n      return;\n    } else {\n      // console.log(offsetX + \" \" + offsetY);\n\n      if (nativeEvent.type == \"touchmove\") {\n        const {\n          offsetX\n        } = nativeEvent.touches[0];\n        const {\n          offsetY\n        } = nativeEvent.touches[0];\n        console.log(offsetX + \" \" + offsetY);\n        contextRef.current.lineTo(nativeEvent.touches[0].clientX, nativeEvent.touches[0].clientY);\n      } else {\n        const {\n          offsetX,\n          offsetY\n        } = nativeEvent;\n        contextRef.current.lineTo(offsetX, offsetY);\n      }\n      contextRef.strokeStyle = color.current;\n      contextRef.current.stroke();\n      // nativeEvent.preventDefault();\n    }\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n    contextRef.current.closePath();\n  };\n\n  // function mobileDrawing(event) {\n  //   var touch = event.touches[0];\n  //   let mouseEvent = new MouseEvent(\"mousemove\", {\n  //     clientX: touch.clientX,\n  //     clientY: touch.clientY,\n  //   });\n  //   canvasRef.current.dispatchEvent(mouseEvent);\n  //   // Drawing();\n  // }\n\n  const setToDraw = () => {\n    contextRef.current.globalCompositeOperation = \"source-over\";\n  };\n  const setToErase = () => {\n    contextRef.current.globalCompositeOperation = \"destination-out\";\n  };\n  const downloadDrawing = event => {\n    //Selects the target of the event the current state of the Canvas.\n    //Then downloads it as an image and names it \"Sketch.png\"\n    let link = event.currentTarget;\n    let image = canvasRef.current.toDataURL(\"image/png\");\n    link.setAttribute(\"download\", \"SketchNDraw.png\");\n    link.setAttribute(\"href\", image);\n  };\n  function clearCanvas(e) {\n    contextRef.current.fillStyle = \"white\";\n    contextRef.current.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tools, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backwards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      onMouseDown: startDrawing,\n      onMouseMove: Drawing,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing,\n      onTouchStart: startDrawing,\n      onTouchMove: Drawing,\n      onTouchEnd: stopDrawing,\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: downloadDrawing,\n      children: \"Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"color\",\n      id: \"color\",\n      onChange: e => setColor(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearCanvas,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Paint, \"4auW4UUmrerTetg2nZAcbnmYElo=\");\n_c = Paint;\nexport default Paint;\nvar _c;\n$RefreshReg$(_c, \"Paint\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useContext","Backwards","Tools","Paint","canvasRef","contextRef","isDrawing","setIsDrawing","color","setColor","canvas","current","width","height","ctx","getContext","mozImageSmoothingEnabled","imageSmoothingEnabled","fillStyle","fillRect","lineCap","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","stroke","strokeStyle","Drawing","type","touches","console","log","lineTo","clientX","clientY","stopDrawing","closePath","setToDraw","globalCompositeOperation","setToErase","downloadDrawing","event","link","currentTarget","image","toDataURL","setAttribute","clearCanvas","e","target","value"],"sources":["C:/Users/Admin/Documents/Programming/End of The Year Project/SketchNDraw/src/pages/Paint.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useContext } from \"react\";\r\n\r\n// import { Paint } from \"./Paint\";\r\nimport Backwards from \"./sections/Backwards.js\";\r\nimport Tools from \"./sections/Tools.js\";\r\n\r\nexport const Paint = () => {\r\n  //Canvas and Context References\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //Canvas\r\n    const canvas = canvasRef.current;\r\n    canvas.width = 800;\r\n    canvas.height = 400;\r\n\r\n    //Context\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.mozImageSmoothingEnabled = false;\r\n    ctx.imageSmoothingEnabled = false;\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineWidth = 5;\r\n    contextRef.current = ctx;\r\n  }, []);\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    setIsDrawing(true);\r\n\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    // console.log(offsetX + \" \" + offsetY);\r\n\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n    contextRef.strokeStyle = color.current;\r\n    // nativeEvent.preventDefault();\r\n  };\r\n\r\n  const Drawing = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    } else {\r\n      // console.log(offsetX + \" \" + offsetY);\r\n\r\n      if (nativeEvent.type == \"touchmove\") {\r\n        const { offsetX } = nativeEvent.touches[0];\r\n        const { offsetY } = nativeEvent.touches[0];\r\n\r\n        console.log(offsetX + \" \" + offsetY);\r\n        contextRef.current.lineTo(\r\n          nativeEvent.touches[0].clientX,\r\n          nativeEvent.touches[0].clientY\r\n        );\r\n      } else {\r\n        const { offsetX, offsetY } = nativeEvent;\r\n\r\n        contextRef.current.lineTo(offsetX, offsetY);\r\n      }\r\n      contextRef.strokeStyle = color.current;\r\n\r\n      contextRef.current.stroke();\r\n      // nativeEvent.preventDefault();\r\n    }\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    setIsDrawing(false);\r\n    contextRef.current.closePath();\r\n  };\r\n\r\n  // function mobileDrawing(event) {\r\n  //   var touch = event.touches[0];\r\n  //   let mouseEvent = new MouseEvent(\"mousemove\", {\r\n  //     clientX: touch.clientX,\r\n  //     clientY: touch.clientY,\r\n  //   });\r\n  //   canvasRef.current.dispatchEvent(mouseEvent);\r\n  //   // Drawing();\r\n  // }\r\n\r\n  const setToDraw = () => {\r\n    contextRef.current.globalCompositeOperation = \"source-over\";\r\n  };\r\n\r\n  const setToErase = () => {\r\n    contextRef.current.globalCompositeOperation = \"destination-out\";\r\n  };\r\n\r\n  const downloadDrawing = (event) => {\r\n    //Selects the target of the event the current state of the Canvas.\r\n    //Then downloads it as an image and names it \"Sketch.png\"\r\n    let link = event.currentTarget;\r\n    let image = canvasRef.current.toDataURL(\"image/png\");\r\n    link.setAttribute(\"download\", \"SketchNDraw.png\");\r\n    link.setAttribute(\"href\", image);\r\n  };\r\n\r\n  function clearCanvas(e) {\r\n    contextRef.current.fillStyle = \"white\";\r\n    contextRef.current.fillRect(\r\n      0,\r\n      0,\r\n      canvasRef.current.width,\r\n      canvasRef.current.height\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Tools />\r\n      <Backwards />\r\n\r\n      <canvas\r\n        id=\"canvas\"\r\n        onMouseDown={startDrawing}\r\n        onMouseMove={Drawing}\r\n        onMouseUp={stopDrawing}\r\n        onMouseLeave={stopDrawing}\r\n        onTouchStart={startDrawing}\r\n        onTouchMove={Drawing}\r\n        onTouchEnd={stopDrawing}\r\n        ref={canvasRef}\r\n      />\r\n\r\n      <a onClick={downloadDrawing}>Download</a>\r\n      <input\r\n        type=\"color\"\r\n        id=\"color\"\r\n        onChange={(e) => setColor(e.target.value)}\r\n      />\r\n\r\n      <button onClick={clearCanvas}>Clear</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Paint;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}