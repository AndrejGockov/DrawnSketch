{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Programming\\\\End of The Year Project\\\\SketchNDraw\\\\src\\\\pages\\\\canvas\\\\Canvas.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\n\n// import { useCanvas } from \"./CanvasContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasContext = /*#__PURE__*/React.createContext();\nexport const Canvas = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  //Refrences\n  const canvasRef = useRef(null);\n  const contextRef = useState(null);\n  let [isDrawing, setIsDrawing] = useState(false);\n\n  //Tools\n  const [brushSize, setBrushSize] = useState(10);\n  const [eraserSize, setEraserSize] = useState(10);\n  // let penSelected = true;\n  // let eraserSelected = false;\n\n  //Color\n  const [color, setColor] = useState(\"#000000\");\n\n  //Window Size\n  // const windowWidth = useRef(window.innerWidth);\n\n  const prepareCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.lineCap = \"round\";\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 5;\n    contextRef.current = ctx;\n    setIsDrawing(true);\n\n    //Canvas Size\n    canvas.width = 800;\n    canvas.height = 400;\n    ctx.scale(2, 2);\n    contextRef.current = ctx;\n  };\n  //   useEffect(() => {\n  //     const canvas = canvasRef.current;\n  //     const ctx = canvas.getContext(\"2d\");\n  //     ctx.fillRect(0, 0, canvas.width, canvas.height);\n  //     ctx.lineCap = \"round\";\n  //     ctx.strokeStyle = \"black\";\n  //     ctx.lineWidth = 5;\n  //     contextRef.current = ctx;\n\n  //     setIsDrawing(true);\n\n  //     //Canvas Size\n  //     canvas.width = 800;\n  //     canvas.height = 400;\n  //   }, [canvasRef]);\n\n  const StartDrawing = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n  };\n  const Draw = _ref3 => {\n    let {\n      nativeEvent\n    } = _ref3;\n    if (!setIsDrawing) {\n      return;\n    } else {\n      const {\n        offsetX,\n        offsetY\n      } = nativeEvent;\n      contextRef.current.moveTo(offsetX, offsetY);\n      contextRef.current.stroke();\n      console.log(offsetX + \" + \" + offsetY);\n      console.log(\"its drawing\");\n    }\n  };\n  const StopDrawing = e => {\n    setIsDrawing(false);\n    contextRef.current.stroke();\n    contextRef.current.closePath(); //ends the path/isDrawing\n    // e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(CanvasContext.Provider, {\n    value: {\n      canvasRef,\n      contextRef,\n      prepareCanvas,\n      StartDrawing,\n      StopDrawing,\n      Draw\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"+DuAbGOrBKsA1HWy604W0xCBoH8=\");\n_c = Canvas;\nexport const useCanvas = () => {\n  _s2();\n  return useContext(CanvasContext);\n};\n_s2(useCanvas, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useContext","CanvasContext","createContext","Canvas","children","canvasRef","contextRef","isDrawing","setIsDrawing","brushSize","setBrushSize","eraserSize","setEraserSize","color","setColor","prepareCanvas","canvas","current","ctx","getContext","fillRect","width","height","lineCap","strokeStyle","lineWidth","scale","StartDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","Draw","stroke","console","log","StopDrawing","e","closePath","useCanvas"],"sources":["C:/Users/Admin/Documents/Programming/End of The Year Project/SketchNDraw/src/pages/canvas/Canvas.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useContext } from \"react\";\r\n\r\n// import { useCanvas } from \"./CanvasContext\";\r\nconst CanvasContext = React.createContext();\r\n\r\nexport const Canvas = ({ children }) => {\r\n  //Refrences\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useState(null);\r\n\r\n  let [isDrawing, setIsDrawing] = useState(false);\r\n\r\n  //Tools\r\n  const [brushSize, setBrushSize] = useState(10);\r\n  const [eraserSize, setEraserSize] = useState(10);\r\n  // let penSelected = true;\r\n  // let eraserSelected = false;\r\n\r\n  //Color\r\n  const [color, setColor] = useState(\"#000000\");\r\n\r\n  //Window Size\r\n  // const windowWidth = useRef(window.innerWidth);\r\n\r\n  const prepareCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.lineCap = \"round\";\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.lineWidth = 5;\r\n    contextRef.current = ctx;\r\n\r\n    setIsDrawing(true);\r\n\r\n    //Canvas Size\r\n    canvas.width = 800;\r\n    canvas.height = 400;\r\n    ctx.scale(2, 2);\r\n    contextRef.current = ctx;\r\n  };\r\n  //   useEffect(() => {\r\n  //     const canvas = canvasRef.current;\r\n  //     const ctx = canvas.getContext(\"2d\");\r\n  //     ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  //     ctx.lineCap = \"round\";\r\n  //     ctx.strokeStyle = \"black\";\r\n  //     ctx.lineWidth = 5;\r\n  //     contextRef.current = ctx;\r\n\r\n  //     setIsDrawing(true);\r\n\r\n  //     //Canvas Size\r\n  //     canvas.width = 800;\r\n  //     canvas.height = 400;\r\n  //   }, [canvasRef]);\r\n\r\n  const StartDrawing = ({ nativeEvent }) => {\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(offsetX, offsetY);\r\n  };\r\n\r\n  const Draw = ({ nativeEvent }) => {\r\n    if (!setIsDrawing) {\r\n      return;\r\n    } else {\r\n      const { offsetX, offsetY } = nativeEvent;\r\n      contextRef.current.moveTo(offsetX, offsetY);\r\n      contextRef.current.stroke();\r\n\r\n      console.log(offsetX + \" + \" + offsetY);\r\n      console.log(\"its drawing\");\r\n    }\r\n  };\r\n\r\n  const StopDrawing = (e) => {\r\n    setIsDrawing(false);\r\n\r\n    contextRef.current.stroke();\r\n    contextRef.current.closePath(); //ends the path/isDrawing\r\n    // e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <CanvasContext.Provider\r\n      value={{\r\n        canvasRef,\r\n        contextRef,\r\n        prepareCanvas,\r\n        StartDrawing,\r\n        StopDrawing,\r\n        Draw,\r\n      }}\r\n    >\r\n      {children}\r\n    </CanvasContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCanvas = () => useContext(CanvasContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}