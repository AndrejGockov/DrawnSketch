{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Programming\\\\End of The Year Project\\\\SketchNDraw\\\\src\\\\pages\\\\canvas\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\n\n// import { useCanvas } from \"./CanvasContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasContext = /*#__PURE__*/React.createContext();\nexport const Canvas = () => {\n  _s();\n  //Refrences\n  const canvasRef = document.querySelector(\"#canvas\");\n  const contextRef = useState(null);\n  canvasRef.width = 800;\n  canvasRef.height = 400;\n  useEffect(() => {\n    const ctx = canvasRef.getContext(\"2d\");\n    // Canvas();\n\n    canvasRef.addEventListener(\"mousedown\", StartDrawing, false);\n  }, []);\n  // const contextRef = useState(null);\n\n  let [isDrawing, setIsDrawing] = useState(false);\n  function StartDrawing(e) {\n    setIsDrawing(true);\n    console.log(e.clientX);\n    // if (penSelected) {\n    //   //Pen\n    //   ctx.beginPath();\n    //   ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n    //   ctx.strokeStyle = currentColor;\n    //   ctx.lineWidth = currentBrushSize;\n    // } else if (eraserSelected) {\n    //   //Eraser\n    //   ctx.beginPath();\n    //   ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n    //   ctx.strokeStyle = \"white\";\n    //   ctx.lineWidth = currentEraserSize;\n    // }\n    // ctx.lineCap = \"round\";\n    // ctx.lineJoin = \"round\";\n    // ctx.stroke();\n    // event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\"\n    // onMouseDown={StartDrawing}\n    // onMouseUp={StopDrawing}\n    // onMouseMove={Draw}\n    // ref={canvasRef}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"RsUAQryL8Rk1J0tP5iJGiT01EdU=\");\n_c = Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useContext","CanvasContext","createContext","Canvas","canvasRef","document","querySelector","contextRef","width","height","ctx","getContext","addEventListener","StartDrawing","isDrawing","setIsDrawing","e","console","log","clientX"],"sources":["C:/Users/Admin/Documents/Programming/End of The Year Project/SketchNDraw/src/pages/canvas/Canvas.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useContext } from \"react\";\r\n\r\n// import { useCanvas } from \"./CanvasContext\";\r\nconst CanvasContext = React.createContext();\r\n\r\nexport const Canvas = () => {\r\n  //Refrences\r\n  const canvasRef = document.querySelector(\"#canvas\");\r\n  const contextRef = useState(null);\r\n\r\n  canvasRef.width = 800;\r\n  canvasRef.height = 400;\r\n\r\n  useEffect(() => {\r\n    const ctx = canvasRef.getContext(\"2d\");\r\n    // Canvas();\r\n\r\n    canvasRef.addEventListener(\"mousedown\", StartDrawing, false);\r\n  }, []);\r\n  // const contextRef = useState(null);\r\n\r\n  let [isDrawing, setIsDrawing] = useState(false);\r\n\r\n  function StartDrawing(e) {\r\n    setIsDrawing(true);\r\n    console.log(e.clientX);\r\n    // if (penSelected) {\r\n    //   //Pen\r\n    //   ctx.beginPath();\r\n    //   ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n    //   ctx.strokeStyle = currentColor;\r\n    //   ctx.lineWidth = currentBrushSize;\r\n    // } else if (eraserSelected) {\r\n    //   //Eraser\r\n    //   ctx.beginPath();\r\n    //   ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\r\n    //   ctx.strokeStyle = \"white\";\r\n    //   ctx.lineWidth = currentEraserSize;\r\n    // }\r\n    // ctx.lineCap = \"round\";\r\n    // ctx.lineJoin = \"round\";\r\n    // ctx.stroke();\r\n    // event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <canvas\r\n      id=\"canvas\"\r\n      // onMouseDown={StartDrawing}\r\n      // onMouseUp={StopDrawing}\r\n      // onMouseMove={Draw}\r\n      // ref={canvasRef}\r\n    />\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAEtE;AAAA;AACA,MAAMC,aAAa,gBAAGL,KAAK,CAACM,aAAa,EAAE;AAE3C,OAAO,MAAMC,MAAM,GAAG,MAAM;EAAA;EAC1B;EACA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;EACnD,MAAMC,UAAU,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEjCK,SAAS,CAACI,KAAK,GAAG,GAAG;EACrBJ,SAAS,CAACK,MAAM,GAAG,GAAG;EAEtBZ,SAAS,CAAC,MAAM;IACd,MAAMa,GAAG,GAAGN,SAAS,CAACO,UAAU,CAAC,IAAI,CAAC;IACtC;;IAEAP,SAAS,CAACQ,gBAAgB,CAAC,WAAW,EAAEC,YAAY,EAAE,KAAK,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EACN;;EAEA,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE/C,SAASc,YAAY,CAACG,CAAC,EAAE;IACvBD,YAAY,CAAC,IAAI,CAAC;IAClBE,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,OAAO,CAAC;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EAEA,oBACE;IACE,EAAE,EAAC;IACH;IACA;IACA;IACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEN,CAAC;AAAC,GAjDWhB,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}